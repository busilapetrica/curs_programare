1. Introducere in C++
Programul scris intr-un limbaj de programare se numeste program sursa si trebuie tradus intr-un limbaj pe care il intelege procesorul numit cod masina sau program executabil
programul specializat se numeste compilator.Iar operatia se numeste inerpretare sau compilare

Fisierul sursa trebuie scris cu extensia .cpp 
daca este corect sintactic se obtine fisierul obiect cu extensia .o sau .obj
In windows executabilul are extensia exe


Liniile care incep cu // sau /* ... */ se numesc comenturi.
// - comenteaza o linie si /* .. */ comenteaza tot ce este scris intre.
In cazul nostru descrierea problemei:
/*Sa se scrie un program care citeste de la tastatura un numar
natural cu exact trei cifre si determina numarul obtinut prin eliminarea cifrei din mijloc.*/

Liniile care incep cu # se numesc directive procesor.ele sunt interpretate inainte de compilare si poate insera continutul altor fisiere sau eliminarea sectiunilor de tip spatiu sau text.

#include <iostream> - permite realizarea de citire si afisare
#include <string> - 
using namespace std; - inlocuieste scrierea de fiecare data  std::cout.  cout  și endl, este un identificator din spațiul de nume std și pentrua se referi mai simplu la indicatori putem sa folosim instructiunea using namespace std;
printf & scanf both are library function from <stdio.h> header file
cin & cout both are object of class from <iostream> header file


urmatoarea linie reprezinta declararea functii cu numele main. functia main este speciala si se lanseaza o data cu 
programul de executie.acoladele delimiteaza instructiuniile functiei main
int main (){

int numarIntrare, nr1, nr3, rezultat;
Variabile
tipul variabilei - stabileste ce fel de valori poate sa ia variabila
indicatorul variabilei reprezinta un nume pentru variabila 

Tipuri de date;
1.tipuri simple; int, float, double, char, bool, void.
2.tipuri derivate; tablou, structura/clasa, enumerate.

INT 
Permite memorarea de valori intregi pozitive sau negative si ocupa 4 octeti
[−2^31,2^31−1], adică [−2.147.483.648,2.147.483.647].

Float
Permite memorarea de valori pe 4 octeti
float p = 3.14, r = 2.5;

Double
Permite memorarea de valori pe 8 octeti
double x = 1.24E+07; // înseamnă 1.24 * 10^7

Char
tipul de date char nu memoreaza caracterul, ci un numar corespunzator caracterului
char c='A';

Boolean
operatiile se fac cu operatii cu valori de true sau false si reprezinta printr-un octet 0 sau 1
bool pp = false;

Modificatori de tip 
Schimbarea modulului care face reprezentarea interna a datei si pot fi aplicate datelor de tip int, double sau char.
signed unde se pot folosi valori negative(4 octeti cu semn)
unsigned unde ia doar valori positive(4 octeti fara semn)
long unde este echivalent cu int ( 4 octeti cu semn)
schort echivalent int (2 octeti cu semn)
unsigned short ( 2 octeti fara semn)
unsigned long log ( 8 octeti fara semn )


operații de intrare: datele intra in program 
operații de ieșire: datele ies din program

Stream-ul de iesire <<cout
Afisarea poate fi accesata cu streamul de iesire impreuna cu operatoul de insertie << 
  cout << "Introdu un numar de trei cifre intre 100 si 1000" << endl;

Stream-ul de intrare >>cin
In cele mai multe cazuri de intrare se foloseste stream-ul cin impreuna cu operatorul de extragere <<
 cin >> numarIntrare;

Operatii
Operatorii relaționali
Sunt: <, >, <=, >=, ==, != . (mai mic <, mai mare >, mai mic sau egal<=, mai mare sau egal >=, egalitate ==, nu este egal!=)
operatorii relationali stabileste daca intre doua numere are loc o relatie.
rezultatul operatiilor este de tip bool, adevarat sau fals, 0 si 1.

Operatorii logici
Sunt: !, ||, &&. (negatia  !, sau ||, si $$)

Operatorii aritmetici
-aritmetici +,-,*, /, %
-unari +, - (  + X = 11, - Y = 3.5, - + N = -11)



  if (numarIntrare < 100 || numarIntrare >= 1000)
    {
      cout << "Numarul introdus nu se afla in range-ul 100-1000" << endl;
      }else{
       nr1 = (numarIntrare/100)*10;
        nr3 = numarIntrare%10;
      rezultat = nr1+nr3;
    }
  cout << rezultat;
  return 0;

Valoarea 0 semnifica faptul că programul s-a încheiat cu succes!
Dacă în programul nostru ar fi fost și alte instrucțiuni după instrucțiunea return 0;, acestea nu s-ar mai fi executat.
}





























